<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="club_notice">

	<select id="sysdate" resultType="java.lang.String">
		SELECT NOW()
	</select>

	<!-- club 공지사항 찾기 시작 -->
	<select id="club_findAll_notice" parameterType="main.vo.ClubVO" resultMap="RM_club_findAll_notice" statementType="CALLABLE">
		{call p_club_findAll_notice(#{club_no})}	
	</select>
	<resultMap id="RM_club_findAll_notice" type="multi.club.vo.Club_noticeVO">
		<result property="c_notice_no"	  	column="c_notice_no"		jdbcType="INTEGER"/>
		<result property="c_notice_title"	column="c_notice_title" 	jdbcType="VARCHAR"/>
		<result property="c_notice_content"	column="c_notice_content"	jdbcType="VARCHAR"/>
		<result property="the_time"	 		column="the_time"			jdbcType="VARCHAR"/>
		<result property="user_id"			column="user_id"			jdbcType="VARCHAR"/>
		<result property="club_no"    		column="club_no"			jdbcType="INTEGER"/>
		<result property="view_count"    	column="view_count"			jdbcType="INTEGER"/>
		<result property="user_name"		column="user_name"			jdbcType="VARCHAR"/>
	</resultMap>
	<!-- club 공지사항 찾기 끝 -->
	
	<!-- club 공지사항 등록 시작 -->
	<update id="club_add_community_notice_submit" parameterType="multi.club.vo.Club_noticeVO" statementType="CALLABLE">
		{call p_club_add_community_notice_submit(#{c_notice_title},#{c_notice_content},#{user_id},#{club_no})}
	</update>
	<!-- club 공지사항 등록 끝 -->
	
	<!-- club 공지사항 디테일 찾기 시작 -->
	<select id="club_find_notice_detail" parameterType="multi.club.vo.Club_noticeVO" resultMap="RM_club_findAll_notice" statementType="CALLABLE">
		{call p_club_find_notice_detail(#{c_notice_no})}	
	</select>
	<!-- club 공지사항 디테일 찾기 끝 -->
	
	<!-- club 공지사항 수정 시작 -->
	<update id="club_mod_notice_detail" parameterType="multi.club.vo.Club_noticeVO" statementType="CALLABLE">
		{call p_club_mod_notice_detail(#{c_notice_no},#{c_notice_title},#{c_notice_content})}
	</update>
	<!-- club 공지사항 수정 끝 -->
	
	<!-- club 공지사항 삭제 시작 -->
	<update id="club_del_notice_detail" parameterType="multi.club.vo.Club_noticeVO" statementType="CALLABLE">
		{call p_club_del_notice_detail(#{c_notice_no})}
	</update>
	<!-- club 공지사항 삭제 끝 -->
	
	<!-- club 공지사항 리플 리스트 시작 -->
	<select id="club_find_notice_reple" parameterType="multi.club.vo.Club_noticeVO" resultMap="RM_club_find_notice_reple" statementType="CALLABLE">
		{call p_club_find_notice_reple(#{c_notice_no})}	
	</select>
	
	<resultMap id="RM_club_find_notice_reple" type="multi.club.vo.Club_notice_repleVO">
		<result property="c_notice_reple_no"		column="c_notice_reple_no"		jdbcType="INTEGER"/>
		<result property="user_id"					column="user_id"				jdbcType="VARCHAR"/>
		<result property="c_notice_no"				column="c_notice_no"			jdbcType="INTEGER"/>
		<result property="the_time"					column="the_time"				jdbcType="VARCHAR"/>
		<result property="c_notice_reple_content"	column="c_notice_reple_content"	jdbcType="VARCHAR"/>
	</resultMap>
	<!-- club 공지사항 리플 리스트 끝 -->
	
	<!-- club 공지사항의 리플 등록 시작 -->
	<update id="club_add_notice_reple" parameterType="multi.club.vo.Club_notice_repleVO" statementType="CALLABLE">
		{call p_club_add_notice_reple(#{user_id},#{c_notice_no},#{c_notice_reple_content})}
	</update>
	<!-- club 공지사항의 리플 등록 끝 -->
	
	<!-- club 공지사항의 리플 삭제 시작 -->
	<update id="club_del_notice_reple" parameterType="multi.club.vo.Club_notice_repleVO" statementType="CALLABLE">
		{call p_club_del_notice_reple(#{c_notice_reple_no})}
	</update>
	<!-- club 공지사항의 리플 삭제 끝 -->
	
	<!-- club 공지사항의 리플 수정 시작 -->
	<update id="club_mod_notice_reple" parameterType="multi.club.vo.Club_notice_repleVO" statementType="CALLABLE">
		{call p_club_mod_notice_reple(#{c_notice_reple_no},#{c_notice_reple_content})}
	</update>
	<!-- club 공지사항의 리플 수정 끝 -->
	
</mapper>


<!--p_club_findAll_notice 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_findAll_notice;
DELIMITER $$

CREATE PROCEDURE p_club_findAll_notice(
	IN v_club_no INT
)
BEGIN
	SELECT c.c_notice_no, c.c_notice_title, c.c_notice_content, c.the_time, c.user_id,
	       c.club_no, c.view_count, u.user_name
	  FROM Club_NoticeT AS c, UserT AS u
 	 WHERE c.club_no=v_club_no
 	   AND c.user_id=u.user_id
 	 ORDER BY c.c_notice_no DESC;
END$$
DELIMITER ;
p_club_findAll_notice 프로시저 끝-->

<!--p_club_add_community_notice_submit 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_add_community_notice_submit;
DELIMITER $$

CREATE PROCEDURE p_club_add_community_notice_submit(
	IN v_c_notice_title VARCHAR(45),
	IN v_c_notice_content TEXT,
	IN v_user_id VARCHAR(20),
	IN v_club_no INT
)
BEGIN
	INSERT INTO Club_NoticeT VALUES(default, v_c_notice_title, v_c_notice_content, now(),0, v_user_id, v_club_no);
END$$
DELIMITER ;
p_club_add_community_notice_submit 프로시저 끝-->

<!--p_club_find_notice_detail 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_find_notice_detail;
DELIMITER $$

CREATE PROCEDURE p_club_find_notice_detail(
	IN v_c_notice_no INT
)
BEGIN
	UPDATE Club_NoticeT
	   SET view_count = view_count+1
	 WHERE c_notice_no = v_c_notice_no;
	 
	SELECT *
	  FROM Club_NoticeT
 	 WHERE c_notice_no=v_c_notice_no;
END$$
DELIMITER ;
p_club_find_notice_detail 프로시저 끝-->

<!--p_club_mod_notice_detail 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_mod_notice_detail;
DELIMITER $$

CREATE PROCEDURE p_club_mod_notice_detail(
	IN v_c_notice_no INT,
	IN v_c_notice_title VARCHAR(45),
	IN v_c_notice_content TEXT
)
BEGIN
	UPDATE Club_noticeT
	   SET c_notice_title = v_c_notice_title,
	       c_notice_content = v_c_notice_content
	 WHERE c_notice_no = v_c_notice_no;
END$$
DELIMITER ;
p_club_mod_notice_detail 프로시저 끝-->

<!--p_club_del_notice_detail 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_del_notice_detail;
DELIMITER $$

CREATE PROCEDURE p_club_del_notice_detail(
	IN v_c_notice_no INT
)
BEGIN
	DELETE 
	  FROM Club_noticeT
	 WHERE c_notice_no = v_c_notice_no;
END$$
DELIMITER ;
p_club_del_notice_detail 프로시저 끝-->

<!--p_club_find_notice_reple 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_find_notice_reple;
DELIMITER $$

CREATE PROCEDURE p_club_find_notice_reple(
	IN v_c_notice_no INT
)
BEGIN
	SELECT *
	  FROM Club_Notice_RepleT
 	 WHERE c_notice_no = v_c_notice_no
 	 ORDER BY c_notice_reple_no DESC;
END$$
DELIMITER ;
p_club_find_notice_reple 프로시저 끝-->

<!--p_club_add_notice_reple 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_add_notice_reple;
DELIMITER $$

CREATE PROCEDURE p_club_add_notice_reple(
	IN v_user_id VARCHAR(20),
	IN v_c_notice_no INT,
	IN v_c_notice_reple_content TEXT
	
)
BEGIN
	INSERT INTO Club_Notice_RepleT VALUES(default,v_user_id, v_c_notice_no, now(), v_c_notice_reple_content);
END$$
DELIMITER ;
p_club_add_notice_reple 프로시저 끝-->

<!--p_club_del_notice_reple 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_del_notice_reple;
DELIMITER $$

CREATE PROCEDURE p_club_del_notice_reple(
	IN v_c_notice_reple_no INT
)
BEGIN
	DELETE 
	  FROM Club_Notice_RepleT
	 WHERE c_notice_reple_no = v_c_notice_reple_no;
END$$
DELIMITER ;
p_club_del_notice_reple 프로시저 끝-->

<!--p_club_mod_notice_reple 프로시저 시작
DROP PROCEDURE IF EXISTS p_club_mod_notice_reple;
DELIMITER $$

CREATE PROCEDURE p_club_mod_notice_reple(
	IN v_c_notice_reple_no INT,
	IN v_c_notice_reple_content TEXT
)
BEGIN
	UPDATE Club_Notice_RepleT
	   SET c_notice_reple_content = v_c_notice_reple_content
	 WHERE c_notice_reple_no = v_c_notice_reple_no;
END$$
DELIMITER ;
p_club_mod_notice_reple 프로시저 끝-->


