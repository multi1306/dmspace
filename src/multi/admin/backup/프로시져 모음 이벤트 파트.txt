 ################################################################ 
	DROP PROCEDURE IF EXISTS p_admin_event_add;
     DELIMITER $$
     CREATE PROCEDURE p_admin_event_add(
           IN v_eve_title VARCHAR(45),
           IN v_eve_content TEXT,
           IN v_eve_thumb_img VARCHAR(45)
     )
     
     BEGIN
           INSERT INTO EventT VALUES (default, v_eve_title,v_eve_content,NOW(),v_eve_thumb_img);
     END$$
    DELIMITER ;
################################################################
	DROP PROCEDURE IF EXISTS p_admin_event_findAll;
	DELIMITER $$
	CREATE PROCEDURE p_admin_event_findAll()
	BEGIN
		SELECT * FROM EventT ORDER BY eve_no DESC;
	END$$
	DELIMITER ;
################################################################
	 	 DROP PROCEDURE IF EXISTS p_admin_event_getByPK;
  		DELIMITER $$
  		CREATE PROCEDURE p_admin_event_getByPK(
			IN v_eve_no INT )
  		BEGIN
		SELECT * FROM EventT WHERE eve_no = v_eve_no;
  		END$$
  		DELIMITER ;
################################################################
	DROP PROCEDURE IF EXISTS p_admin_event_mod;
	DELIMITER $$
	CREATE PROCEDURE p_admin_event_mod(
		IN v_eve_no INT,
		IN v_eve_title TEXT(45),
		IN v_eve_content TEXT,
		IN v_eve_thumb_img VARCHAR(45)
	)
	BEGIN
		UPDATE EventT set eve_title=v_eve_title, eve_content=v_eve_content, eve_thumb_img= v_eve_thumb_img
			WHERE eve_no = v_eve_no;
	END$$
	DELIMITER ;
################################################################
	DROP PROCEDURE IF EXISTS p_admin_event_delByPK;
	DELIMITER $$
	CREATE PROCEDURE p_admin_event_delByPK(
		IN v_eve_no INT
	)
	BEGIN
		DELETE FROM EventT WHERE eve_no = v_eve_no;
	END$$
	DELIMITER ;
			